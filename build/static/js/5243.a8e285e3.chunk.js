"use strict";(self.webpackChunkpaymaster_crm=self.webpackChunkpaymaster_crm||[]).push([[5243],{5243:(e,r,a)=>{a.r(r),a.d(r,{default:()=>S});var s=a(9950),t=a(3785),n=a(3939),i=a(3632),o=a(3557),m=a(6888),l=a(7922),c=a(8145),u=a(9714);const d=u.Ik({username:u.Yj().required("Username is required"),appraisalDate:u.Yj().required("Appraisal date is required").matches(/^\d{4}-\d{2}-\d{2}$/,"Appraisal date must be in the format YYYY-MM-DD"),performanceScore:u.ai().required("Performance score is required").min(1,"Minimum score is 1").max(5,"Maximum score is 5"),strengths:u.Yj().required("Strengths are required").min(5,"Strengths must be at least 5 characters long"),areasOfImprovement:u.Yj().required("Areas of improvement are required").min(5,"Areas of improvement must be at least 5 characters long"),feedback:u.Yj().required("Feedback is required").min(5,"Feedback must be at least 5 characters long")});var p=a(1286),f=a(9845),h=a(4414);function b(){const e=(0,p.A)(),{setAlert:r}=(0,s.useContext)(f.C),a=(0,n.Wx)({initialValues:{username:"",appraisalDate:"",performanceScore:null,strengths:"",areasOfImprovement:"",feedback:""},validationSchema:d,onSubmit:async e=>{try{const a=await t.A.post("/add-appraisal",e);r({open:!0,message:a.data.message,severity:"success"})}catch(a){r({open:!0,message:"Network Error"===a.message?"Network Error, your details will be submitted when you are back online":a.response.data.message,severity:"error"})}}});return(0,h.jsxs)("form",{onSubmit:a.handleSubmit,children:[(0,h.jsx)(l.A,{value:a.values.username,onChange:(e,r)=>{a.setFieldValue("username",r)},options:e,getOptionLabel:e=>e||"",sx:{marginBottom:"10px"},renderInput:e=>(0,h.jsx)(c.A,{...e,className:"login-input",fullWidth:!0,variant:"filled",size:"small",label:"Select User",error:a.touched.username&&Boolean(a.errors.username),helperText:a.touched.username&&a.errors.username})}),(0,h.jsx)(m.A,{id:"appraisalDate",name:"appraisalDate",label:"Appraisal Date",type:"date",formik:a}),(0,h.jsx)("br",{}),"Performance Score",(0,h.jsx)("br",{}),(0,h.jsx)(i.A,{name:"performanceScore",value:a.values.performanceScore,onChange:(e,r)=>{a.setFieldValue("performanceScore",r)}}),a.touched.performanceScore&&a.errors.performanceScore&&(0,h.jsx)("div",{style:{color:"#d32f2f"},children:a.errors.performanceScore}),(0,h.jsx)(m.A,{id:"strengths",name:"strengths",label:"Strengths",multiline:!0,rows:3,formik:a,useSpeech:!0}),(0,h.jsx)(m.A,{id:"areasOfImprovement",name:"areasOfImprovement",label:"Areas of Improvement",multiline:!0,rows:3,formik:a,useSpeech:!0}),(0,h.jsx)(m.A,{id:"feedback",name:"feedback",label:"Feedback",multiline:!0,rows:3,formik:a,useSpeech:!0}),(0,h.jsx)(o.A,{name:"Submit",isSubmitting:a.isSubmitting})]})}const S=s.memo(b)}}]);